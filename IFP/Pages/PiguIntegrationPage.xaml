<Page x:Class="IFP.Pages.PiguIntegrationPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
      xmlns:local="clr-namespace:IFP.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="1080" d:DesignWidth="1920"
      Title="PiguIntegrationPage">

    <Page.Resources>
        <!-- DataGrid style -->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserSortColumns" Value="True" />
            <Setter Property="CanUserResizeColumns" Value="True" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="ColumnWidth" Value="Auto"/>
            <Setter Property="MinColumnWidth" Value="130"/>
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="AlternatingRowBackground" Value="Wheat"/>
            <Setter Property="MinRowHeight" Value="25"/>
        </Style>

        <!-- DataGridColumnHeader style -->
        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="25" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </Page.Resources>

    <Grid Margin="0" Background="WhiteSmoke" >

        <Grid.RowDefinitions>
            <!--loading bar-->
            <RowDefinition Height="70"/>
            <!--middle grid-->
            <RowDefinition Height="*"/>
            <!--bottom buttons-->
            <RowDefinition Height="75"/>
        </Grid.RowDefinitions>

        <!--loading bar-->
        <Border Grid.Row="0" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="10,10,10,0" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Margin="0" Grid.Column="1">
                    <ProgressBar x:Name="loadingBar"  Minimum="0" Maximum="1000" Height="30" VerticalAlignment="Center" Visibility="Visible" IsEnabled="true"/>
                    <TextBlock x:Name="loadingBarLabel" Text="" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5"/>
                </Grid>
            </Grid>
        </Border>

        <!--middle grid-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--DragAndDrop Listboxes-->
            <Border Grid.Column="0" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="10,10,10,0" Padding="10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="OurProductsLabel" Content="Our Products" Grid.Column="0"/>
                        <Button x:Name="OurLBSelectButton" Content="Select all" Click="OurLBSelectButton_Click" Grid.Column="2"/>
                    </Grid>

                    <Label x:Name="PiguProductsLabel" Content="Pigu Products" Grid.Column="2" Grid.Row="0"/>
                    <Button Grid.Column="0" Grid.Row="1" x:Name="SelectCategoryButton" Click="SelectCategoryButton_Click" Content="Select Category" Padding="5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

                    <!--<ComboBox Grid.Column="0" Grid.Row="1" x:Name="OurProductTypeFilterCBox" Visibility="Visible" VerticalAlignment="Center" 
                              StaysOpenOnEdit="True" IsTextSearchEnabled="True" IsEditable="True" SelectionChanged="OurProductTypeFilterCBox_SelectionChanged" SelectedValuePath="Key" DisplayMemberPath="Value"/>-->

                    <!--transfer buttons-->
                    <Grid Grid.Column="1" Grid.RowSpan="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Button x:Name="ToPiguTransferBtn" Content="→" FontSize="20" Grid.Row="1" Margin="5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Click="ToPiguTransferBtn_Click"/>
                    </Grid>

                    <!--OurProductsLB-->
                    <ListBox Grid.Column="0" Grid.Row="2" Name="OurProductsLB" ItemsSource="{Binding}" d:ItemsSource="{d:SampleData ItemCount=5}" 
                             SelectionChanged="OurProductsLB_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <EventSetter Event="PreviewKeyDown" Handler="OurProductsLB_PreviewKeyDown"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" Padding="3">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30"/>
                                            <ColumnDefinition Width="30"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="SKU:" Grid.Row="0" Grid.Column="1"/>
                                        <TextBox Text="{Binding SKU}" Grid.Row="0" Grid.Column="3">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Background" Value="GhostWhite"/>
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                        <TextBlock />

                                        <TextBlock Text="Title:" Grid.Row="1" Grid.Column="1"/>
                                        <TextBlock Text="{Binding Title}" Grid.Row="1" Grid.Column="3" TextWrapping="Wrap"/>

                                        <CheckBox IsChecked="{Binding Selected}" Grid.RowSpan="2" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <!--PiguProductsLB-->
                    <ListBox Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Name="PiguProductOfferLB" ItemsSource="{Binding}" d:ItemsSource="{d:SampleData ItemCount=5}"  
                             SelectionChanged="PiguProductsLB_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.Resources>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Path=AnyVariantOffersEnabled}" Value="True">
                                        <Setter Property="Background" Value="Green"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" Padding="3" HorizontalAlignment="Stretch" Margin="3">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="75"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="50"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="SKU:" Grid.Row="0" Grid.Column="0"/>
                                        <TextBox Text="{Binding SKU}" Grid.Row="0" Grid.Column="2">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Background" Value="GhostWhite"/>
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                        <TextBlock />

                                        <TextBlock Text="Title:" Grid.Row="1" Grid.Column="0"/>
                                        <TextBlock Text="{Binding Title}" Grid.Row="1" Grid.Column="2" TextWrapping="Wrap"/>


                                        <TextBlock Text="ProductType:" Grid.Row="2" Grid.Column="0"/>
                                        <TextBlock Text="{Binding ProductTypeVal}" Grid.Row="2" Grid.Column="2" TextWrapping="Wrap"/>

                                        <Button Grid.Column="4" Grid.RowSpan="3" Content="[x]" Command="{Binding ElementName=PiguProductOfferLB, Path=DataContext.DeletePiguItemCommand}"
                                        CommandParameter="{Binding}" Margin="5" Padding="3" VerticalContentAlignment="Center"/>

                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>

            <!--Product info Border-->
            <Border Grid.Column="1" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="0,10,10,0" Padding="10">

                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="5*"/>
                    </Grid.RowDefinitions>

                    <!--Variants Grid-->
                    <Grid Grid.Row="0" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>

                        <TextBox x:Name="ProductInfoLabel" Text="Product Info" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="IsReadOnly" Value="True" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                        <Grid Margin="0" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Variant Name: " Margin="5" Padding="3"/>

                            <ComboBox Grid.Column="1" x:Name="ProductVariantComboBox" Margin="0,5,0,5" ItemsSource="{Binding}"
                                      SelectedValuePath="Value" DisplayMemberPath="Key" SelectionChanged="ProductVariantComboBox_SelectionChanged">
                            </ComboBox>

                        </Grid>

                        <Grid Margin="0" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Product Name:" Margin="5" Padding="3"/>

                            <TabControl Grid.Column="1">
                                <TabItem>
                                    <TabItem.Header>
                                        <TextBlock Text="LT" Foreground="Blue" FontSize="10"/>
                                    </TabItem.Header>
                                    <TextBox x:Name="TitleLTLabel" Visibility="Visible" VerticalAlignment="Center" Padding="3">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="IsReadOnly" Value="True" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </TabItem>
                                <TabItem>
                                    <TabItem.Header>
                                        <TextBlock Text="LV" Foreground="Blue" FontSize="10"/>
                                    </TabItem.Header>
                                    <TextBox x:Name="TitleLVLabel" Visibility="Visible" VerticalAlignment="Center" Padding="3">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="IsReadOnly" Value="True" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </TabItem>
                                <TabItem>
                                    <TabItem.Header>
                                        <TextBlock Text="EE" Foreground="Blue" FontSize="10"/>
                                    </TabItem.Header>
                                    <TextBox x:Name="TitleEELabel" Visibility="Visible" VerticalAlignment="Center" Padding="3">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="IsReadOnly" Value="True" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </TabItem>
                                <TabItem>
                                    <TabItem.Header>
                                        <TextBlock Text="RU" Foreground="Blue" FontSize="10"/>
                                    </TabItem.Header>
                                    <TextBox x:Name="TitleRULabel" Visibility="Visible" VerticalAlignment="Center" Padding="3">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="IsReadOnly" Value="True" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </TabItem>
                            </TabControl>
                        </Grid>

                        <Grid Margin="0" Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Barcode: " Margin="5" Padding="3"/>
                            <TextBlock Grid.Column="1" x:Name="BarcodeBlock" Visibility="Visible" VerticalAlignment="Center" Padding="3"/>
                        </Grid>

                        <Grid Margin="0" Grid.Row="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="VendorStock: " Margin="5" Padding="3"/>
                            <TextBlock Grid.Column="1" x:Name="VendorStockBlock" Visibility="Visible" VerticalAlignment="Center" Padding="3"/>
                        </Grid>

                        <Grid Margin="0" Grid.Row="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="OurStock: " Margin="5" Padding="3"/>
                            <TextBox Grid.Column="1" x:Name="OurStockBox" Visibility="Visible" VerticalAlignment="Center" Padding="3"
                                     PreviewTextInput="IntPreviewTextInput"/>
                        </Grid>

                        <Grid Margin="0" Grid.Row="6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Vendor Price (€): " Margin="5" Padding="3"/>
                            <TextBlock Grid.Column="1" x:Name="VendorPriceBlock" Visibility="Visible" VerticalAlignment="Center" Padding="3"/>
                        </Grid>

                        <Grid Margin="0" Grid.Row="7">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Our Price (€): " Margin="5" Padding="3"/>
                            <TextBox Grid.Column="1" x:Name="OurPriceBox" Visibility="Visible" VerticalAlignment="Center" Padding="3"
                                     PreviewTextInput="DoublePreviewTextInput"/>
                        </Grid>

                        <Grid Margin="0" Grid.Row="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="135"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Our Price wDicount (€): " Margin="5" Padding="3"/>
                            <TextBox Grid.Column="1" x:Name="DiscountPriceBox" Visibility="Visible" VerticalAlignment="Center" Padding="3"
                                     PreviewTextInput="DoublePreviewTextInput"/>
                        </Grid>

                        <Grid Margin="0" Grid.Row="9">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="SavePiguSellOfferBtn" IsEnabled="False" Click="SavePiguSellOfferBtn_Click" Content="Save Variant" Padding="15,5,15,5" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,4"/>
                            <emoji:TextBlock x:Name="SavePiguSellOfferLabel" Grid.Column="1" FontSize="12" Text="Variant Saved✅" VerticalAlignment="Center" Visibility="Collapsed"/>
                        </Grid>
                    </Grid>

                    <!--productImage-->
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label Name="ProductImagesLabel" Content = "Product Images" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <ListBox Grid.Row="1" Grid.Column="0" Name="ProductImagesListBox" SelectionMode="Single" ItemsSource="{Binding}">

                            <ListBox.Resources>
                                <Style TargetType="ListBoxItem">
                                    <!--<EventSetter Event="MouseDoubleClick" Handler="ChangeListBox_MouseDoubleClick"/>-->
                                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=ActualWidth}" />
                                    <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=ActualHeight}" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="ToolTip" Value="Double Click To Edit"/>
                                    <Setter Property="ToolTipService.InitialShowDelay" Value="5000"/>
                                    <Setter Property="ToolTipService.ShowDuration" Value="5000"/>
                                    <Setter Property="ToolTipService.BetweenShowDelay" Value="5000"/>
                                </Style>
                            </ListBox.Resources>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" Padding="2" HorizontalAlignment="Stretch">
                                        <Image Margin="5" Source="{Binding}" Stretch="Uniform" />
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>

                    <!--product Properties-->
                    <Grid Grid.Row="1" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label x:Name="ProductAttributtesLabel" Content="Product Attributtes" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <DataGrid x:Name="productAttributesDG" Grid.Row="1" Grid.Column="1" Margin="0" SelectionMode="Single" CanUserAddRows="False" HeadersVisibility="Column"
                          VerticalAlignment="Stretch" AutoGenerateColumns="False" >
                            <DataGrid.Columns>

                                <DataGridTextColumn Binding="{Binding AttributeName}" Header="Attribute Name" Width="*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                            <Setter Property="TextAlignment" Value="Left"/>
                                            <Setter Property="Padding" Value="5"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Binding="{Binding AttributeValue}" Header="Attribute Value" Width="2*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                            <Setter Property="TextAlignment" Value="Left"/>
                                            <Setter Property="Padding" Value="5"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>

                </Grid>
            </Border>
        </Grid>

        <!--buttons Border-->
        <Border Grid.Row="2" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="10,10,10,10" Padding="10">

            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="75"/>
                    <ColumnDefinition Width="175"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="175"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="BackButton" Click="BackButton_Click" Content="Back" Padding="15,5,15,5" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0"/>
                <Button x:Name="EditProductButton" Click="EditProductButton_Click" Content="Edit Selected Product" IsEnabled="False" Padding="15,5,15,5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1"/>

                <TextBlock x:Name="LastXmlGenTimeTB" Text="Last Xml Generation Time: " Padding="15,5,15,5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" />
                <Button x:Name="GenerateXMLButton" Click="GenerateXMLButton_Click" Content="Generate and Upload XML" IsEnabled="False" Padding="15,5,15,5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4"/>

            </Grid>
        </Border>

    </Grid>
</Page>
