<Page x:Class="IFP.Pages.ProductBulkEditPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:IFP.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="1080" d:DesignWidth="1920"
      Title="ProductBulkEditPage">

    <Grid Margin="0" Background="WhiteSmoke">

        <Grid.RowDefinitions>
            <!--loading bar-->
            <RowDefinition Height="70"/>
            <!--content-->
            <RowDefinition Height="*"/>
            <!--bottom buttons-->
            <RowDefinition Height="75"/>
        </Grid.RowDefinitions>

        <!--loading bar-->
        <Border Grid.Row="0" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="10,10,10,0" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Margin="0" Grid.Column="1">
                    <ProgressBar x:Name="loadingBar"  Minimum="0" Maximum="1000" Height="30" VerticalAlignment="Center" Visibility="Visible" IsEnabled="true"/>
                    <TextBlock x:Name="loadingbarLabel" Text="" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5"/>
                </Grid>

            </Grid>
        </Border>

        <!--Contents Border-->
        <Grid Margin="0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--left content border-->
            <Border Grid.Column="0" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="10,10,10,0" Padding="10">
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="125"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="35"/>
                    </Grid.RowDefinitions>

                    <!--current product type selection-->
                    <TextBlock Grid.Column="0" Text="Current Product Type" VerticalAlignment="Center"/>
                    <Button Grid.Column="1" Grid.ColumnSpan="2" x:Name="SelectCurrentCategoryButton" Click="SelectCurrentCategoryButton_Click" Content="Select Current Category" Padding="5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

                    <!--vendor product type selection-->
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Vendor Product Type" VerticalAlignment="Center"/>
                    <ComboBox Grid.Column="1" Grid.Row="1" x:Name="VendorTypeFilterCBox" Visibility="Visible" VerticalAlignment="Center" StaysOpenOnEdit="True" IsTextSearchEnabled="True" IsEditable="True"/>
                    <Button x:Name="DeleteVendorTypeFilterButton" Grid.Column="2" Grid.Row="1" Click="DeleteVendorTypeFilterButton_Click" Content="X" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,5,0,5" VerticalContentAlignment="Center"/>

                    <!--update listbox button-->
                    <Button Grid.ColumnSpan="3" Grid.Row="2" Width="135" x:Name="RefreshProductListBoxButton" Click="RefreshProductListBoxButton_Click" Content="↓↓↓↓↓" Padding="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" VerticalContentAlignment="Center"/>

                    <ListBox Grid.ColumnSpan="3" Grid.Row="3" Name="ChangeTypeListBox" SelectionMode="Single" ItemsSource="{Binding}" d:ItemsSource="{d:SampleData ItemCount=5}" SelectionChanged="ChangeTypeListBox_SelectionChanged">

                        <ListBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding DataContext.SelectItemCommand, ElementName=KeyListBox}" 
                                CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"/>
                        </ListBox.InputBindings>

                        <ListBox.Resources>
                            <Style TargetType="ListBoxItem">
                                <!--<EventSetter Event="MouseDoubleClick" Handler="ChangeListBox_MouseDoubleClick"/>-->
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="ToolTip" Value="Double Click To Edit"/>
                                <Setter Property="ToolTipService.InitialShowDelay" Value="5000"/>
                                <Setter Property="ToolTipService.ShowDuration" Value="5000"/>
                                <Setter Property="ToolTipService.BetweenShowDelay" Value="5000"/>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <EventSetter Event="PreviewKeyDown" Handler="ListBoxItem_PreviewKeyDown" />
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" Padding="2" HorizontalAlignment="Stretch">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30"/>
                                            <ColumnDefinition Width="70"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition Width="430"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="SKU:" Grid.Row="0" Grid.Column="1"/>
                                        <TextBox Text="{Binding SKU}" Grid.Row="0" Grid.Column="3">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Background" Value="GhostWhite"/>
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                        <TextBlock />

                                        <TextBlock Text="Title:" Grid.Row="1" Grid.Column="1"/>
                                        <TextBlock Text="{Binding Title}" Grid.Row="1" Grid.Column="3" TextWrapping="Wrap"/>

                                        <TextBlock Text="Type:" Grid.Row="2" Grid.Column="1"/>
                                        <TextBlock Text="{Binding ProductType}" Grid.Row="2" Grid.Column="3" TextWrapping="Wrap"/>

                                        <TextBlock Text="Vendor Type:" Grid.Row="3" Grid.Column="1"/>
                                        <TextBlock Text="{Binding VendorProductType}" Grid.Row="3" Grid.Column="3" TextWrapping="Wrap"/>

                                        <CheckBox IsChecked="{Binding Selected, Mode=TwoWay}" Grid.RowSpan="4" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <!--new product type selection-->
                    <TextBlock Grid.Column="0" Grid.Row="4" Text="New Product Type" VerticalAlignment="Center"/>
                    <Button Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="4" x:Name="SelectNewCategoryButton" Click="SelectNewCategoryButton_Click" Content="Select New Category" Padding="5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

                    <Grid Grid.ColumnSpan="3" Grid.Row="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="SelectAllProductsButton" Click="SelectAllProductsButton_Click" Content="Select All" Padding="5,5,5,5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Width="135" Margin="0,0,0,0"/>
                        <Button x:Name="ChangeTypesButton" Click="ChangeTypesButton_Click" Content="Change Product Types" Padding="5,5,5,5" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Width="135" Margin="0,0,0,0"/>

                    </Grid>
                </Grid>
            </Border>

            <!--attributters border-->
            <Border Grid.Column="1" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="0,10,10,0" Padding="10">
                <Grid Margin="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="ProductAttributtesLabel" Text="Product Attributtes" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="IsReadOnly" Value="True" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <DataGrid x:Name="productAttributesDG" Grid.Row="3" Grid.Column="1" Margin="0" SelectionMode="Single" CanUserAddRows="False" HeadersVisibility="Column"
                          VerticalAlignment="Stretch" AutoGenerateColumns="False" >
                        <DataGrid.Columns>

                            <DataGridTextColumn Binding="{Binding AttributeName}" Header="Attribute Name" Width="*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="TextAlignment" Value="Left"/>
                                        <Setter Property="Padding" Value="5"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Binding="{Binding AttributeValue}" Header="Attribute Value" Width="2*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="TextAlignment" Value="Left"/>
                                        <Setter Property="Padding" Value="5"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBox x:Name="ProductImagesLabel" Text="Product Images" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="IsReadOnly" Value="True" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <ListBox Grid.Row="3" Name="ProductImagesListBox" SelectionMode="Single" ItemsSource="{Binding}">

                        <ListBox.Resources>
                            <Style TargetType="ListBoxItem">
                                <!--<EventSetter Event="MouseDoubleClick" Handler="ChangeListBox_MouseDoubleClick"/>-->
                                <!--<Setter Property="Template" Value="{StaticResource listControlTemplate}" />
                                <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=ActualHeight}" />-->
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="ToolTip" Value="Double Click To Edit"/>
                                <Setter Property="ToolTipService.InitialShowDelay" Value="5000"/>
                                <Setter Property="ToolTipService.ShowDuration" Value="5000"/>
                                <Setter Property="ToolTipService.BetweenShowDelay" Value="5000"/>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="1" Padding="2" HorizontalAlignment="Stretch">
                                    <Image Margin="5" Source="{Binding}" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=ActualHeight}"
                                           Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=ActualWidth}"/>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </Grid>
            </Border>

        </Grid>

        <!--buttons Border-->
        <Border Grid.Row="2" Background="GhostWhite" BorderBrush="Gainsboro" BorderThickness="2" Margin="10,10,10,10" Padding="10">

            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="BackButton" Click="BackButton_Click" Content="Back" Padding="15,5,15,5" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0"/>

            </Grid>
        </Border>
    </Grid>
</Page>
